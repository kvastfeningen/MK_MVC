@model MK_MVC.ViewModels.PeopleViewModel;
@using MK_MVC.Models

@{
    ViewData["Title"] = "Index";
}

<p>
    @using (Html.BeginForm("Index", "Person", FormMethod.Post))
{
    
           @Html.TextBox("SearchWord")
           <input type="submit" id="SearchWord" value="Search" />

} 
</p>

<h1>Add</h1>

<form asp-controller="Person" asp-action="Add" method="post">
    <!--<div asp-validation-summary="All"></div>-->
    <div asp-validation-summary="All" class="text-danger"></div>
    @*<div>@Html.ValidationSummary(false, "", new { @class = "text-danger" })</div>*@
   <div class="form-group">
    <label asp-for="Name"></label><br>
    <input asp-for="Name" /><br>
    <span asp-validation-for="Name"></span>
    </div>
    <div class="form-group">
    <label asp-for="Phone"></label><br>
    <input asp-for="Phone" /><br>
    </div>
    <div class="form-group">
    <label asp-for="City"></label><br>
    <input asp-for="City" /><br>
    <span asp-validation-for="City"></span>
    </div><br>
    <input type="submit" value="Add person" /><br>
</form>

<br />
@if (Model?.AllPeople?.Count() == 0)
{
    <p>No people in list</p>
}
<br />
<h2>People Table</h2>

<table class="table">
    <thead>
        <tr><th>  </th>
            <th>@Html.DisplayNameFor(model => model.PersonId)</th>
            <th>@Html.DisplayNameFor(model => model.Name)</th>
            <th>@Html.DisplayNameFor(model => model.Phone)</th>
            <th>@Html.DisplayNameFor(model => model.City)</th>
   </tr>
    </thead>
    <tr>
    @foreach (var item in Model?.AllPeople)
        {
            <partial name="_Person" model="item" />
        }
     </tr>
</table>

      

   